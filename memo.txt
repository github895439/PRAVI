「インターネットを介してビデオゲームをプレイする実験」
(PRAVI=Playing Real Arcade Via Internet)

■メモ
速度が最重要なのでUDPを使う。
送信データは、キーボード(コントローラの無い人とか)や2コントローラ分(ダブルプレイとか)等も想定し、1種1バイトで256バイト。
(何バイト目と何の入力を対応づける。)
1種1バイトなのはシフト処理の時間節約と簡素によるバグ対策。
サーバー側をRaspberry Pi(以降、ラスパイ)にしたのはロボット制御等で使われてモジュールがありそうだから、ハード制御が容易そうであるため。
(アナログではなく、単なるスイッチON/OFFだけだし。
micro:bitもあるがスクリプトらしいので速度が気になる。)
データをただ反映するだけではローカルのような恒久的(?)な入力にならないため工夫がいる。
考えたのは、受信した入力を1/3fくらいの間有効として扱うというもの。
(1/3fにしたのは、1f内に確実に2入力以上が保証されるようにするため。
1/2ではないのは経験的勘。)
例えば、上入力を受信したらそこから1/3f時間までは上入力が入ったままとして扱う。
ただし、その時間までに新たに受信したら、その入力の効く時間をそこから新たに1/3f時間とする。
クライアントの送信タイミングは1/3fか1/6f毎に現状を送信する。
(当然ニュートラル・無押しもデータとして送信することになる。)
ただ、通信量のことを考えると、ニュートラル・無押しは送信しない方法を考える必要があるかもしれない。
深くは考えていないが、上記の入力の有効時間があるため、時間満了&次入力無しはニュートラル・無押しとして扱うとしてもできるかも。
原理動作以外の、例えば、認証であるとかまで行うことを想定するなら、送信データに機能データも載せる。
速度が最重要なのでコンバイル言語。
プレイヤーかどうかは受信データの送信元IPで識別。
ポートを非固定にする等、自由度や機能を上げるなら、別途機能や管理用のTCP接続をするのもアリ。
ただ、これは速度もいらないので、ラスパイ上のnode.js+JavascriptでブラウザUIもいいかも。
(使いやすい&作りやすい。)
前記の認証等もここに含めてしまうとか。
と思ったけど、クライアント側のブラウザとクライアントソフトの連携が面倒だからHTTPではなくクライアントソフトが独自TCPもするでいいかも。
おまけとしては、コントローラとキーボードのマッピングとか。
前記のコントローラの無い人がプレイする時に、キーボードのボタンをコントローラに割り当てて、コントローラの入力として扱うようにする。
更に飛躍すると、セットコマンドみたいのをキーボードに仕込んで、コントローラとキーボードの両方を使ってとか。
(格ゲーだけを対象にしてるわけではないので。)
ネットワークセキュリティは無考慮。
画面は別途ライブサイトをプレイヤーが視聴する。
ライブサイト故のラグならば、ライブサーバーソフト(VLC等)で直接提供する手もある。

■ラズパイでのスイッチ制御
https://deviceplus.jp/hobby/raspberrypi-gpio/
少なくともコントローラ分くらいの数はありそう。
ラズパイのバージョンだったりにもよるだろうけど、3.3Vと5Vとある。
基板入力の電圧ってどれくらいなんだろう。。。
ま、電圧違うだけなら回路挟めば調節できそう。
特別電流が高いというわけでもないし。
物理駆動ではないため制御速度は考慮しなくて良さそう。
ただ、ロジックの処理速度があるので、これはPythonぽいからC等からやった方がいいだろう。

■残
PCでのコントローラ入力検出方法
　コントローラを使うオープンソースのPCゲームを見たりすればわかるはず。
原理ソフトを作る？？？

■懸案
